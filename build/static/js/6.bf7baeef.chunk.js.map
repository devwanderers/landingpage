{"version":3,"sources":["components/Sections/StepTitle.js","components/Buttons/ButtonSpin.js","components/CreateAntField/index.js","store/services/axiosConfig.js","hooks/whiteListApi.js","services/yupValidations.js","views/Whitelist.js"],"names":["StepTitle","children","className","direction","Header","lg","style","textOrientation","writingMode","antIcon","LoadingOutlined","fontSize","spin","ButtonSpin","loading","textLoading","restProps","indicator","Fragment","FormItem","Form","Item","Option","Select","CreateAntField","AntComponent","field","form","hasFeedback","label","selectOptions","submitCount","type","props","change","onChange","touched","name","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","value","target","setFieldValue","map","AntSelect","AntInput","DatePicker","Input","Password","TimePicker","axiosInstance","axios","create","baseURL","interceptors","response","use","Promise","resolve","reject","error","status","data","whiteListApi","useState","fetching","setFetching","verified","setIdVerified","verifySponsorId","id","a","console","log","get","then","res","verify","addUser","byId","wallet","walletById","user","sponsorId","network","referralId","discordId","email","post","created","SUPPORTED_FORMATS","regex","validations","refId","Yup","min","max","password","matches","required","passwordConfirmation","oneOf","userName","test","validator","isAlphanumeric","mail","lowercase","phone","isAlpha","replace","birthDate","country","state","city","line","postalCode","file","size","includes","min20Usd","_v","parseFloat","no0Usd","generic","boolean","onlyNumber","isColor","s","color","number","array","staking","totalTokens","validateIsNotCurrentUser","currentUser","currentMembers","userMail","valid","index","length","Content","Layout","initialValues","referrerOptions","Whitelist","referralOpt","setReferralOpt","setbyId","verifiedWallet","setVerifiedWallet","showMessage","setShowMessage","sended","sendEmail","createError","setCreateError","errorMessage","setErrorMessage","schema","checkSponsor","sponsor","verifySponsor","mensaje","setTimeout","handleWallet","e","count","nextStep","document","getElementById","scrollIntoView","behavior","formSubmit","values","resetForm","minWidth","DefaultNavbar","base","md","width","top","returnValueByScreenWidth","innerWidth","sm","xl","bottom","height","validationSchema","onSubmit","isSubmitting","Group","options","option","selectReferrerOpt","optionType","buttonStyle","component","placeholder","disabled","onClick","src","utilitiesImages","href"],"mappings":"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","file":"static/js/6.bf7baeef.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from '../DisplayText/Header'\n\nconst StepTitle = ({ children, className = '', direction }) => {\n    return direction === 'right' ? (\n        <div\n            className={`css-generic pb-5 lg:pb-10 items-end justify-end flex-grow relative ${className}`}\n        >\n            <div className=\"css-generic w-100px \">\n                <div className=\"css-generic mr-8\">\n                    <Header\n                        lg=\"89px\"\n                        className=\"text-primary transform rotate-180 leading-tight tracking-widest\"\n                        style={{\n                            textOrientation: 'sideways-right',\n                            writingMode: 'vertical-rl',\n                        }}\n                    >\n                        {children}\n                    </Header>\n                </div>\n            </div>\n            <div className=\"section-title-line border-blue-4 border-b border-r border-solid flex h-full\">\n                <div className=\"relative flex-grow\">\n                    <div className=\"absolute right-0 bottom-0 h-2/6 border-r-4 -mb-1px border-solid border-primary -mr-1\"></div>\n                </div>\n            </div>\n        </div>\n    ) : (\n        <div\n            className={`css-generic pb-5 lg:pb-10 items-start justify-end flex-grow relative ${className}`}\n        >\n            <div className=\"css-generic w-100px \">\n                <div className=\"css-generic mr-8\">\n                    <Header\n                        lg=\"89px\"\n                        className=\"text-primary transform rotate-180 leading-tight tracking-widest\"\n                        style={{\n                            textOrientation: 'sideways-right',\n                            writingMode: 'vertical-rl',\n                        }}\n                    >\n                        {children}\n                    </Header>\n                </div>\n            </div>\n            <div className=\"section-title-line border-blue-4 border-t border-l border-solid flex h-full\">\n                <div className=\"relative flex-grow\">\n                    <div className=\"absolute left-0 bottom-0 h-2/6 border-l-4 -mb-1px border-solid border-primary -mr-1\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nStepTitle.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n}\n\nexport default StepTitle\n","import React from 'react'\nimport { Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nconst antIcon = (\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\n)\n\nconst ButtonSpin = ({ loading, textLoading, children, ...restProps }) => {\n    return (\n        <button\n            className=\" bg-primary text-lg px-12 py-2 rounded-md text-white disabled:opacity-50\"\n            // disabled={loading}\n            {...restProps}\n        >\n            {loading ? (\n                <span>\n                    <span className=\"pr-2\">\n                        <Spin indicator={antIcon} />\n                    </span>\n                    {textLoading}\n                </span>\n            ) : (\n                <React.Fragment> {children}</React.Fragment>\n            )}\n        </button>\n    )\n}\n\nexport default ButtonSpin\n","/* eslint-disable react/display-name */\nimport React from 'react'\nimport { DatePicker, Form, Input, TimePicker, Select } from 'antd'\n\nconst FormItem = Form.Item\nconst { Option } = Select\n\nconst CreateAntField = (AntComponent) => ({\n    field,\n    form,\n    hasFeedback,\n    label,\n    selectOptions,\n    submitCount,\n    type,\n    ...props\n}) => {\n    const change = props.onChange\n    const touched = form.touched[field.name]\n    const submitted = submitCount > 0\n    const hasError = form.errors[field.name]\n    const submittedError = hasError && submitted\n    const touchedError = hasError && touched\n    const onInputChange = ({ target: { value } }) =>\n        form.setFieldValue(field.name, value)\n    const onChange = (value) => form.setFieldValue(field.name, value)\n    const onBlur = () => form.setFieldTouched(field.name, true)\n    return (\n        <FormItem\n            label={label}\n            hasFeedback={(hasFeedback && submitted) || (hasFeedback && touched)}\n            help={submittedError || touchedError ? hasError : false}\n            validateStatus={\n                submittedError || touchedError ? 'error' : 'success'\n            }\n            onChange={change}\n        >\n            <AntComponent\n                {...field}\n                {...props}\n                onBlur={onBlur}\n                onChange={type ? onInputChange : onChange}\n            >\n                {selectOptions &&\n                    selectOptions.map((name) => (\n                        <Option key={name}>{name}</Option>\n                    ))}\n            </AntComponent>\n        </FormItem>\n    )\n}\n\nexport const AntSelect = CreateAntField(Select)\nexport const AntDatePicker = CreateAntField(DatePicker)\nexport const AntInput = CreateAntField(Input)\nexport const AntInputPassword = CreateAntField(Input.Password)\nexport const AntTimePicker = CreateAntField(TimePicker)\n","import axios from 'axios'\n\nconst axiosInstance = axios.create({\n    baseURL: '',\n})\naxiosInstance.interceptors.response.use(\n    (response) =>\n        new Promise((resolve, reject) => {\n            resolve(response)\n        }),\n    (error) => {\n        if (!error.response) {\n            return new Promise((resolve, reject) => {\n                reject(error)\n            })\n        }\n        if (error.response.status === 403) {\n            // window.location = '/logout'\n        } else if (\n            error.response.status === 404 ||\n            error.response.status === 500\n        ) {\n            return new Promise((resolve, reject) => {\n                reject(error.response.data)\n            })\n        } else {\n            return new Promise((resolve, reject) => {\n                reject(error)\n            })\n        }\n    }\n)\nexport default axiosInstance\n","/* eslint-disable no-unused-vars */\nimport { useState, useCallback } from 'react'\nimport axiosInstance from '../store/services/axiosConfig'\n\nconst whiteListApi = () => {\n    const [fetching, setFetching] = useState(false)\n    const [verified, setIdVerified] = useState(false)\n\n    const verifySponsorId = async (id) => {\n        console.log('verifyCode', id)\n        setFetching(true)\n        try {\n            const verify = await axiosInstance\n                .get(`http://localhost:9000/api/records/verify/${id}`)\n                .then((res) => res.data)\n            setFetching(false)\n            setIdVerified(true)\n            return verify\n        } catch (error) {\n            setFetching(false)\n            setIdVerified(false)\n            return error\n        }\n    }\n\n    const addUser = async (data, byId) => {\n        console.log(data)\n        setFetching(true)\n        const wallet = byId ? data.walletById : data.wallet\n        const user = {\n            byId: byId,\n            sponsorId: data.sponsorId,\n            wallet: wallet,\n            network: data.network,\n            referralId: data.referralId,\n            discordId: data.discordId,\n            email: data.email,\n        }\n        console.log(user)\n        try {\n            const created = await axiosInstance\n                .post(`http://localhost:9000/api/records/add`, user)\n                .then((res) => res.data)\n            setFetching(false)\n            setIdVerified(true)\n            console.log({ created })\n            return created\n        } catch (error) {\n            setFetching(false)\n            setIdVerified(false)\n            return error\n        }\n    }\n\n    return {\n        verifySponsorId,\n        addUser,\n        fetching,\n        verified,\n        setIdVerified,\n    }\n}\n\nexport default whiteListApi\n","import * as Yup from 'yup'\nimport validator from 'validator'\n\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\n\nconst FILE_SIZE = 100 * 1024\n\nexport const regex = {\n    alpha: /^[A-Za-z]+$/,\n    alphaNumeric: /[a-zA-Z0-9]/,\n    atLeastOneUpperCase: /[A-Z]/,\n    phoneNumber: /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n    exact5: /^[0-9]{5}$/,\n}\n\nexport const validations = {\n    refId: Yup.string()\n        .min(4, 'Must be contain 4 digits min')\n        .max(12, 'Must be contain 12 digits min'),\n    wallet: Yup.string()\n        .min(10, 'Must be contain 10 digits min')\n        .max(64, 'Must be contain 64 digits min'),\n    password: Yup.string()\n        .min(8, 'Too Short!')\n        .max(64, 'Too Long!')\n        .matches(\n            regex.atLeastOneUpperCase,\n            'Must contain al least one uppercase letter.'\n        )\n        .required('Required'),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must contain only letters and numbers.',\n            (value) => value && validator.isAlphanumeric(value)\n        )\n        .required('Required'),\n    mail: Yup.string()\n        .max(64, 'Too Long!')\n        .email('Must be a valid email format. example@email.com')\n        .lowercase('Must contain only lower case')\n        .required('Required'),\n    phone: Yup.string()\n        .matches(regex.phoneNumber, 'Must be a valid phone number.')\n        .required('Required'),\n    name: Yup.string()\n        .min(3, 'Too Short!')\n        .max(30, 'Too Long!')\n        .test(\n            'alpha',\n            'Must contain only letters.',\n            (value) =>\n                !value || (value && validator.isAlpha(value.replace(' ', '')))\n        ),\n    // .required('Required'),\n    birthDate: Yup.date().required('Required'),\n    country: Yup.string().required('Required'),\n    state: Yup.string().required('Required'),\n    city: Yup.string().required('Required'),\n    line: Yup.string().required('Required'),\n    postalCode: Yup.string()\n        .matches(regex.exact5, 'Must be exactly 5 digits')\n        .required('Required'),\n    file: Yup.mixed()\n        .required('A file is required')\n        .test(\n            'fileSize',\n            'File too large',\n            (value) => value && value[0].size <= FILE_SIZE\n        )\n        .test(\n            'fileFormat',\n            'Unsupported Format',\n            (value) => value && SUPPORTED_FORMATS.includes(value[0].type)\n        )\n        .required('Required'),\n    min20Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Minimum to invest is 20 USD', (value) => {\n            if (value) {\n                let _v = value\n                _v = _v.replace(/\\D/g, '')\n                _v = parseFloat(_v)\n                return _v >= 20.0\n            }\n            return false\n        }),\n    no0Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Usd amount must be higher than 0', (value) => {\n            if (value) {\n                let _v = value\n                _v = parseFloat(_v)\n                return _v > 0.0\n            }\n            return false\n        }),\n    generic: Yup.string().max(64, 'Too Long!').required('Required'),\n    boolean: Yup.bool().oneOf([true], 'Field must be checked'),\n    onlyNumber: Yup.mixed()\n        .required('Required')\n        .test('onlyNumber', 'Field must be a number', (value) => {\n            if (value) {\n                const _v = value\n                const isnum = /^\\d+$/.test(_v)\n\n                return isnum\n            }\n            return false\n        }),\n    isColor: Yup.mixed()\n        .required('Required')\n        .test(\n            'color',\n            'Field must be a valid color format. Examples. RGBA: rgba(0, 0, 0, 1), HEXA: #000000, RGB: rgb(0,0,0), Color: red',\n            (value) => {\n                if (value) {\n                    const s = new Option().style\n                    s.color = value\n                    return s.color !== ''\n                }\n                return false\n            }\n        ),\n    number: Yup.number().required('Required'),\n    array: Yup.array().required('Required'),\n    staking: (totalTokens) => {\n        return Yup.mixed()\n            .required('Required')\n            .test('onlyNumber', 'Field must be a number', (value) => {\n                if (value) {\n                    const _v = value\n                    const isnum = /^\\d+$/.test(_v)\n\n                    return isnum\n                }\n                return false\n            })\n            .test('minStake', 'Minimum to stake is 1', (value) => {\n                if (value) {\n                    let _v = value\n                    _v = _v.replace(/\\D/g, '')\n                    _v = parseFloat(_v)\n                    return _v >= 1.0\n                }\n                return false\n            })\n            .test('maxStake', 'Insufficient Balance', (value) => {\n                if (value) {\n                    let _v = value\n                    _v = _v.replace(/\\D/g, '')\n                    _v = parseFloat(_v)\n                    return _v <= parseFloat(totalTokens)\n                }\n                return false\n            })\n    },\n    validateIsNotCurrentUser: (currentUser, currentMembers) => {\n        return Yup.mixed()\n            .required('Required')\n            .test('validUserName', 'You can not add yourself', (value) => {\n                if (value) {\n                    if (\n                        value === currentUser.userName ||\n                        value === currentUser.userMail\n                    )\n                        return false\n                    return true\n                }\n                return false\n            })\n            .test(\n                'validateIsNotExistingMember',\n                'You can not add existing members',\n                (value) => {\n                    if (value) {\n                        let valid = true\n\n                        for (\n                            let index = 0;\n                            index < currentMembers.length;\n                            index++\n                        ) {\n                            const { userName, userMail } = currentMembers[index]\n                            if (value === userName || value === userMail) {\n                                valid = false\n                                break\n                            }\n                        }\n                        return valid\n                    }\n                    return false\n                }\n            )\n    },\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { BackTop, Layout, Button, Radio } from 'antd'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport { BiUpArrowAlt } from 'react-icons/bi'\n\nimport DefaultNavbar from '../components/Navbar/DefaultNavbar'\nimport HeaderText from '../components/DisplayText/Header'\nimport StepTitle from '../components/Sections/StepTitle'\nimport ButtonSpin from '../components/Buttons/ButtonSpin'\nimport { AntInput, AntSelect } from '../components/CreateAntField'\nimport whiteListApi from '../hooks/whiteListApi'\nimport {\n    DownArrowSVG,\n    OctagonTwitterSVG,\n    OctagonDiscordSVG,\n} from '../assets/svg/icons'\nimport {\n    FrameWhiteListTopSVG,\n    FrameWhiteListBottomSVG,\n} from '../assets/svg/frames'\nimport { Logo1SVG } from '../assets/svg/brand'\nimport utilitiesImages from '../assets/images/utilities'\nimport { returnValueByScreenWidth } from '../services/stylesServices'\nimport { validations } from '../services/yupValidations'\n\nconst { Content } = Layout\n\nconst initialValues = {\n    sponsorId: '',\n    wallet: '',\n    network: '',\n    referralId: '',\n    walletById: '',\n    discordId: '',\n    email: '',\n}\n\nconst referrerOptions = [\n    { label: 'Verify by id', value: 'id' },\n    { label: 'Verify by wallet', value: 'wallet' },\n]\n\nconst Whitelist = () => {\n    const {\n        verifySponsorId,\n        addUser,\n        fetching,\n        verified,\n        setIdVerified,\n    } = whiteListApi()\n    const [referralOpt, setReferralOpt] = useState('id')\n    const [byId, setbyId] = useState(true)\n    const [verifiedWallet, setVerifiedWallet] = useState(false)\n    const [showMessage, setShowMessage] = useState(false)\n    const [sended, sendEmail] = useState(false)\n    const [createError, setCreateError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const schema = Yup.object({\n        sponsorId: validations.refId,\n        referralId: validations.refId,\n        wallet: validations.wallet,\n        walletById: validations.wallet,\n        email: validations.mail,\n    })\n\n    const selectReferrerOpt = (e, resetForm) => {\n        const option = e.target.value\n        setReferralOpt(option)\n        setbyId(!byId)\n        setShowMessage(false)\n        setIdVerified(false)\n        resetForm()\n    }\n\n    const checkSponsor = async (sponsor) => {\n        const verifySponsor = await verifySponsorId(sponsor)\n        console.log(verifySponsor)\n        setErrorMessage(verifySponsor.mensaje)\n        setShowMessage(true)\n        setTimeout(() => {\n            setErrorMessage('')\n            setShowMessage(false)\n        }, 4000)\n    }\n\n    const handleWallet = (e) => {\n        const count = e.target.value.length\n        count >= 10 ? setVerifiedWallet(true) : setVerifiedWallet(false)\n    }\n\n    const nextStep = () => {\n        const element = document.getElementById('step2')\n        element.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    const formSubmit = async (values, { resetForm }) => {\n        console.log('click on submit')\n        const created = await addUser(values, byId)\n        if (created.error) {\n            sendEmail(true)\n            setCreateError(true)\n            setErrorMessage(created.mensaje)\n            setTimeout(() => {\n                setCreateError(false)\n                setErrorMessage('')\n                sendEmail(false)\n            }, 4000)\n        } else {\n            sendEmail(true)\n            setbyId(true)\n            setIdVerified(false)\n            resetForm()\n            setTimeout(() => {\n                sendEmail(false)\n            }, 4000)\n        }\n    }\n\n    return (\n        <Layout\n            className=\"whitelist flex flex-col min-h-screen\"\n            style={{ minWidth: '425px' }}\n        >\n            <BackTop>\n                <div className=\"h-12 w-12 lg:h-16 lg:w-16 rounded-full flex justify-center items-center bg-primary text-white\">\n                    <BiUpArrowAlt className=\"text-2xl\" />\n                </div>\n            </BackTop>\n            <DefaultNavbar />\n            <Content className=\"bg-blue-5\">\n                <div className=\"bg-whitelistSlider bg-no-repeat bg-cover -mt-24 pb-1 xl:pb-32 lg:pb-40 relative\">\n                    <div className=\"section mx-auto h-screen\">\n                        <div className=\"css-generic h-full flex-col justify-center\">\n                            <div className=\"count-down bg-black-1 bg-opacity-50 py-8 relative\">\n                                <div className=\"text-white\">\n                                    <div>\n                                        <HeaderText\n                                            base=\"xl\"\n                                            md=\"3xl\"\n                                            lg=\"5xl\"\n                                            className=\"text-white lg:-mb-8\"\n                                        >\n                                            THE WANDERERS\n                                        </HeaderText>\n                                        <HeaderText\n                                            base=\"2xl\"\n                                            md=\"6xl\"\n                                            lg=\"8xl\"\n                                            className=\"text-white tracking-widest\"\n                                        >\n                                            WHITELIST\n                                        </HeaderText>\n                                    </div>\n                                    <div>\n                                        <p className=\"font-saira-condensed text-7xl\">\n                                            <span className=\"font-russo-one text-9xl text-primary\">\n                                                250\n                                            </span>{' '}\n                                            PLACES\n                                        </p>\n                                    </div>\n                                    <div className=\"text-center mb-5\">\n                                        <span className=\"text-2rem font-semibold\">\n                                            FOLLOW THE SIMPLE STEPS AND\n                                            <br />\n                                            BECOME PART TO THE EXCLUSIVE\n                                            WHITELIST\n                                        </span>\n                                    </div>\n                                    <DownArrowSVG\n                                        width=\"60px\"\n                                        className=\"m-auto\"\n                                    />\n                                    <div\n                                        className=\"absolute right-0 left-0 -mx-3\"\n                                        style={{\n                                            top: returnValueByScreenWidth(\n                                                innerWidth,\n                                                {\n                                                    base: '-10px',\n                                                    sm: '-16px',\n                                                    md: '-18px',\n                                                    xl: '-18px',\n                                                }\n                                            ),\n                                        }}\n                                    >\n                                        <FrameWhiteListTopSVG width=\"100%\" />\n                                    </div>\n                                    <div\n                                        className=\"absolute right-0 left-0 -mx-3\"\n                                        style={{\n                                            bottom: returnValueByScreenWidth(\n                                                innerWidth,\n                                                {\n                                                    base: '-10px',\n                                                    sm: '-16px',\n                                                    md: '-18px',\n                                                    xl: '-18px',\n                                                }\n                                            ),\n                                        }}\n                                    >\n                                        <FrameWhiteListBottomSVG\n                                            width=\"100%\"\n                                            height=\"100%\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bg-whiteListBottom bg-bottom bg-no-repeat bg-contain bg-opacity-10\">\n                    <Formik\n                        validationSchema={schema}\n                        initialValues={initialValues}\n                        onSubmit={formSubmit}\n                    >\n                        {({ isSubmitting, resetForm, values }) => (\n                            <Form>\n                                <div className=\"step-1 css-generic lg:flex-row py-20 pb-32 px-10px xl:px-0\">\n                                    <HeaderText\n                                        base=\"4xl\"\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\n                                    >\n                                        STEP 1\n                                    </HeaderText>\n                                    <StepTitle\n                                        direction=\"right\"\n                                        className=\"hidden lg:flex w-1/5\"\n                                    >\n                                        STEP 1\n                                    </StepTitle>\n                                    <div className=\"info text-center lg:text-left px-7 w-full lg:w-3/5\">\n                                        <div className=\"text-center mb-5\">\n                                            <Radio.Group\n                                                options={referrerOptions}\n                                                onChange={(e) => {\n                                                    selectReferrerOpt(\n                                                        e,\n                                                        resetForm\n                                                    )\n                                                }}\n                                                value={referralOpt}\n                                                optionType=\"button\"\n                                                buttonStyle=\"solid\"\n                                            />\n                                        </div>\n                                        {byId ? (\n                                            <>\n                                                <p className=\"text-info text-5xl font-bold\">\n                                                    VERIFY YOUR REFERRER CALL\n                                                    SIGN ID\n                                                </p>\n                                                <p className=\"text-blue-8 text-4xl\">\n                                                    Enter the Referral Call Sign\n                                                    ID of the Wanderers that\n                                                    referred you.\n                                                </p>\n                                                <div className=\"my-5\">\n                                                    <span className=\"text-primary text-4xl\">\n                                                        Enter The Referrer ID\n                                                    </span>\n                                                    <Field\n                                                        component={AntInput}\n                                                        name=\"sponsorId\"\n                                                        type=\"string\"\n                                                        placeholder=\"Enter The Referrer ID\"\n                                                        className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10 py-3\"\n                                                    />\n                                                </div>\n                                                <p className=\"text-blue-8 text-3xl\">\n                                                    Their ID is needed for you\n                                                    to access this exclusive\n                                                    whitelist.\n                                                </p>\n                                                <div className=\"text-center lg:text-right mt-10\">\n                                                    <ButtonSpin\n                                                        className=\"btn-whitelist bg-transparent h-full px-20 border-4\tborder-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\n                                                        disabled={\n                                                            values.sponsorId\n                                                                .length < 4\n                                                        }\n                                                        onClick={async () => {\n                                                            if (verified) {\n                                                                nextStep()\n                                                            } else {\n                                                                checkSponsor(\n                                                                    values.sponsorId\n                                                                )\n                                                            }\n                                                        }}\n                                                        loading={fetching}\n                                                    >\n                                                        {verified ? (\n                                                            <span className=\"text-3xl text-primary font-medium\">\n                                                                NEXT\n                                                            </span>\n                                                        ) : (\n                                                            <span className=\"text-3xl text-primary font-medium\">\n                                                                VERIFY\n                                                            </span>\n                                                        )}\n                                                    </ButtonSpin>\n                                                    {showMessage && (\n                                                        <div className=\"text-white text-2xl mt-4\">\n                                                            {verified ? (\n                                                                <div>\n                                                                    <span>\n                                                                        Successfully\n                                                                        verified\n                                                                    </span>\n                                                                </div>\n                                                            ) : (\n                                                                <div>\n                                                                    <span>\n                                                                        {\n                                                                            errorMessage\n                                                                        }\n                                                                    </span>\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </>\n                                        ) : (\n                                            <div className=\"w-full flex flex-col lg:flex-row items-center justify-center lg:justify-between\">\n                                                <div className=\"info w-full px-10 lg:px-0 text-center lg:text-left mb-20 lg:mb-0\">\n                                                    <p className=\"text-info text-5xl font-bold\">\n                                                        CONNECT YOUR WALLET\n                                                    </p>\n                                                    <div className=\"my-5\">\n                                                        <span className=\"text-primary text-4xl\">\n                                                            Enter your wallet\n                                                            address\n                                                        </span>\n                                                        <Field\n                                                            component={AntInput}\n                                                            name=\"wallet\"\n                                                            type=\"string\"\n                                                            placeholder=\"Wallet address\"\n                                                            className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10 py-3\"\n                                                            onChange={\n                                                                handleWallet\n                                                            }\n                                                        />\n                                                    </div>\n                                                    <div className=\"my-5\">\n                                                        <p className=\"text-primary text-4xl\">\n                                                            Select your network\n                                                        </p>\n                                                        <Field\n                                                            component={\n                                                                AntSelect\n                                                            }\n                                                            name=\"network\"\n                                                            className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10\"\n                                                            selectOptions={[\n                                                                'Ethereum',\n                                                                'Solana',\n                                                                'Polygon',\n                                                            ]}\n                                                        />\n                                                    </div>\n                                                    <div className=\"mt-10\">\n                                                        <Button\n                                                            className=\"bg-transparent h-full px-20 border-4\tborder-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\n                                                            onClick={() =>\n                                                                nextStep()\n                                                            }\n                                                            disabled={\n                                                                !verifiedWallet ||\n                                                                values.network\n                                                                    .length <= 0\n                                                            }\n                                                        >\n                                                            <span className=\"text-3xl text-primary font-medium\">\n                                                                NEXT\n                                                            </span>\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                                <img\n                                                    src={utilitiesImages.wallet}\n                                                    width=\"50%\"\n                                                />\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"hidden lg:block w-1/5\"></div>\n                                </div>\n                                <div\n                                    id=\"step2\"\n                                    className=\"step-2 css-generic lg:flex-row pb-32 px-10px xl:px-0\"\n                                >\n                                    <HeaderText\n                                        base=\"4xl\"\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\n                                    >\n                                        STEP 2\n                                    </HeaderText>\n                                    <div className=\"hidden lg:block w-1/5\"></div>\n                                    <div className=\"info text-center lg:text-right px-7 w-full lg:w-3/5\">\n                                        <p className=\"text-info text-5xl font-bold\">\n                                            CREATE YOUR REFERRAL ID VERIFICATION\n                                        </p>\n                                        <p className=\"text-blue-8 text-4xl\">\n                                            Create your Referral ID\n                                        </p>\n                                        <div className=\"my-5\">\n                                            <span className=\"text-primary text-4xl\">\n                                                Create Your Referral ID\n                                            </span>\n                                            <Field\n                                                component={AntInput}\n                                                name=\"referralId\"\n                                                type=\"string\"\n                                                placeholder=\"Ex: tom123\"\n                                                className=\"bg-blue-9 border-none text-left lg:text-right text-3xl text-gray-300 placeholder-blue-10 py-3\"\n                                                disabled={\n                                                    (byId && !verified) ||\n                                                    (!byId && !verifiedWallet)\n                                                }\n                                            />\n                                            <p className=\"text-blue-8 text-2xl\">\n                                                Minimum 4 Characters, Max 12\n                                                Characters, only letters and\n                                                numbers allowed for your ID.\n                                            </p>\n                                        </div>\n                                        {byId && (\n                                            <div className=\"my-5\">\n                                                <span className=\"text-primary text-4xl\">\n                                                    Enter your wallet address\n                                                </span>\n                                                <Field\n                                                    component={AntInput}\n                                                    name=\"walletById\"\n                                                    type=\"string\"\n                                                    placeholder=\"Wallet address\"\n                                                    className=\"bg-blue-9 border-none text-left lg:text-right text-3xl text-gray-300 placeholder-blue-10 py-3\"\n                                                    disabled={\n                                                        (byId && !verified) ||\n                                                        (!byId &&\n                                                            !verifiedWallet)\n                                                    }\n                                                />\n                                            </div>\n                                        )}\n                                    </div>\n                                    <StepTitle\n                                        direction=\"left\"\n                                        className=\"hidden lg:flex w-1/5\"\n                                    >\n                                        STEP 2\n                                    </StepTitle>\n                                </div>\n                                <div className=\"step-3 css-generic lg:flex-row pb-32 px-10px xl:px-0\">\n                                    <HeaderText\n                                        base=\"4xl\"\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\n                                    >\n                                        STEP 3\n                                    </HeaderText>\n                                    <StepTitle\n                                        direction=\"right\"\n                                        className=\"hidden lg:flex w-1/5\"\n                                    >\n                                        STEP 3\n                                    </StepTitle>\n                                    <div className=\"info px-7 w-full lg:w-3/5 text-center lg:text-left\">\n                                        <p className=\"text-info text-5xl font-bold\">\n                                            TWITTER AND DISCORD VERIFICATION.\n                                        </p>\n                                        <div className=\"flex flex-row justify-around my-10\">\n                                            <div className=\"text-center\">\n                                                <OctagonTwitterSVG\n                                                    className=\"mx-auto mb-5\"\n                                                    width=\"50%\"\n                                                />\n                                                <span className=\"text-primary text-4xl\">\n                                                    Follow our twitter\n                                                </span>\n                                            </div>\n                                            <div className=\"text-center\">\n                                                <OctagonDiscordSVG\n                                                    className=\"mx-auto mb-5\"\n                                                    width=\"50%\"\n                                                />\n                                                <span className=\"text-primary text-4xl\">\n                                                    Join our discord\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"text-center lg:text-justify\">\n                                            <p className=\"text-blue-8 text-4xl\">\n                                                Find your Discord ID through\n                                                account options (on PC) or use\n                                                the profile button (on mobile).\n                                                Your ID must include the # and\n                                                numbers included.\n                                            </p>\n                                        </div>\n                                        <div className=\"my-5\">\n                                            <span className=\"text-primary text-4xl\">\n                                                Your Discord ID\n                                            </span>\n                                            <Field\n                                                component={AntInput}\n                                                name=\"discordId\"\n                                                type=\"string\"\n                                                placeholder=\"Ex: Tom#5019\"\n                                                className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10 py-3\"\n                                                disabled={\n                                                    (byId && !verified) ||\n                                                    (!byId && !verifiedWallet)\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"hidden lg:block w-1/5\"></div>\n                                </div>\n                                <div className=\"step-4 css-generic lg:flex-row pb-32 px-10px xl:px-0\">\n                                    <HeaderText\n                                        base=\"4xl\"\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\n                                    >\n                                        STEP 4\n                                    </HeaderText>\n                                    <div className=\"hidden lg:block w-1/5\"></div>\n                                    <div className=\"info text-center lg:text-right px-7 w-full lg:w-3/5\">\n                                        <p className=\"text-info text-5xl font-bold\">\n                                            EMAIL ADDRESS\n                                        </p>\n                                        {/* <p className=\"text-blue-8 text-4xl\">\n                                            *optional: for notifications or\n                                            newsletters, etc.\n                                        </p> */}\n                                        <div className=\"my-5\">\n                                            <span className=\"text-primary text-4xl\">\n                                                Your email\n                                            </span>\n                                            <Field\n                                                component={AntInput}\n                                                name=\"email\"\n                                                type=\"string\"\n                                                placeholder=\"Ex: tom@example.com\"\n                                                className=\"bg-blue-9 border-none text-left lg:text-right text-3xl text-gray-300 placeholder-blue-10 py-3\"\n                                                disabled={\n                                                    (byId && !verified) ||\n                                                    (!byId && !verifiedWallet)\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                    <StepTitle className=\"hidden lg:flex w-1/5\">\n                                        STEP 4\n                                    </StepTitle>\n                                </div>\n                                <div className=\"step-5 css-generic lg:flex-row pb-32 px-10px xl:px-0\">\n                                    <HeaderText\n                                        base=\"4xl\"\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\n                                    >\n                                        STEP 5\n                                    </HeaderText>\n                                    <StepTitle\n                                        direction=\"right\"\n                                        className=\"hidden lg:flex w-1/5\"\n                                    >\n                                        STEP 5\n                                    </StepTitle>\n                                    <div className=\"info text-center lg:px-7 w-full lg:w-3/5\">\n                                        <p className=\"text-info text-5xl font-bold\">\n                                            GOOGLE RECAPTCHA VERIFICATION\n                                        </p>\n                                        <div className=\"mt-20\">\n                                            {byId ? (\n                                                <ButtonSpin\n                                                    type=\"submit\"\n                                                    className=\"btn-whitelist bg-transparent h-full w-4/5 lg:w-2/5 border-4 border-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\n                                                    disabled={\n                                                        values.sponsorId\n                                                            .length < 4 ||\n                                                        values.referralId\n                                                            .length < 4 ||\n                                                        values.walletById\n                                                            .length < 10 ||\n                                                        values.discordId\n                                                            .length === 0 ||\n                                                        values.email.length ===\n                                                            0\n                                                    }\n                                                    loading={fetching}\n                                                >\n                                                    <span className=\"text-4xl text-primary font-medium\">\n                                                        SIGN UP\n                                                    </span>\n                                                </ButtonSpin>\n                                            ) : (\n                                                <ButtonSpin\n                                                    type=\"submit\"\n                                                    className=\"btn-whitelist bg-transparent h-full w-4/5 lg:w-2/5 border-4 border-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\n                                                    disabled={\n                                                        values.wallet.length <\n                                                            10 ||\n                                                        values.network\n                                                            .length === 0 ||\n                                                        values.referralId\n                                                            .length < 4 ||\n                                                        values.discordId\n                                                            .length === 0 ||\n                                                        values.email.length ===\n                                                            0\n                                                    }\n                                                    loading={fetching}\n                                                >\n                                                    <span className=\"text-4xl text-primary font-medium\">\n                                                        SIGN UP\n                                                    </span>\n                                                </ButtonSpin>\n                                            )}\n                                        </div>\n                                        {sended && (\n                                            <>\n                                                {createError ? (\n                                                    <div className=\"mt-10 text-white\">\n                                                        <h4 className=\"text-3xl text-white\">\n                                                            WARNING:\n                                                        </h4>\n                                                        <span className=\"text-3xl\">\n                                                            {errorMessage}\n                                                        </span>\n                                                    </div>\n                                                ) : (\n                                                    <div className=\"mt-10 text-white\">\n                                                        <span className=\"text-3xl\">\n                                                            Thank you! we will\n                                                            review it and send\n                                                            you an email\n                                                        </span>\n                                                    </div>\n                                                )}\n                                            </>\n                                        )}\n                                    </div>\n                                    <div className=\"hidden lg:block w-1/5\"></div>\n                                </div>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n                <footer className=\"bg-blue-5 py-12 hidden lg:block\">\n                    <div className=\"section\">\n                        <div className=\"css-generic flex-row justify-between\">\n                            <div className=\"css-generic flex-grow max-h-full w-6/12 \">\n                                <div className=\"css-generic items-center w-64\">\n                                    <div className=\"css-generic w-full mb-3 px-8\">\n                                        <Logo1SVG width=\"100%\" />\n                                    </div>\n                                    <HeaderText\n                                        base=\"2xl\"\n                                        className=\"text-blue-4 font-semibold font-saira-condensed\"\n                                    >\n                                        9,000 unique Wanderers\n                                    </HeaderText>\n                                </div>\n                            </div>\n                            <div className=\"css-generic flex-grow max-h-full w-6/12 items-center\">\n                                <div className=\"css-generic\">\n                                    <h5 className=\"text-capitalize text-xl text-blue-4 tracking-wide font-bold mb-2\">\n                                        Home\n                                    </h5>\n                                    <ul className=\"list-none font-saira-condensed font-semibold\">\n                                        <li className=\"mb-2\">\n                                            <a\n                                                className=\"text-blue-4 hover:text-gray-400\"\n                                                href=\"#\"\n                                            >\n                                                Terms of service\n                                            </a>\n                                        </li>\n                                        <li className=\" mb-2\">\n                                            <a\n                                                className=\"text-blue-4 hover:text-gray-400\"\n                                                href=\"#\"\n                                            >\n                                                Smart Contract\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </footer>\n            </Content>\n        </Layout>\n    )\n}\n\nexport default Whitelist\n"],"sourceRoot":""}