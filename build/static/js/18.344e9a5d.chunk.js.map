{"version":3,"sources":["views/LandingPage/SliderLands.js","components/DisplayText/Header.js","services/stylesServices.js","components/CustomSliderControls/NextArrowControl.js","components/CustomSliderControls/PrevArrowControl.js"],"names":["SliderLands","landImages","useState","imageIndex","setImageIndex","sliderLandSettings","dots","infinite","lazyLoad","autoplay","speed","slidesToShow","innerWidth","centerMode","centerPadding","nextArrow","prevArrow","beforeChange","_","next","Fragment","className","map","idx","id","img","src","alt","base","lg","title","percent","Header","children","style","restProps","returnTextSizeByScreenWidth","sm","md","xl","xxl","defaultProps","temp","values","index","length","returnValueByScreenWidth","screenSizeWidth","NextArrowControl","onClick","PrevArrowControl"],"mappings":"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","file":"static/js/18.344e9a5d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Slider from 'react-slick'\r\nimport NextArrowControl from '../../components/CustomSliderControls/NextArrowControl'\r\nimport PrevArrowControl from '../../components/CustomSliderControls/PrevArrowControl'\r\nimport HeaderText from '../../components/DisplayText/Header'\r\n\r\nconst SliderLands = ({ landImages }) => {\r\n    const [imageIndex, setImageIndex] = useState(0)\r\n    const sliderLandSettings = {\r\n        dots: false,\r\n        infinite: true,\r\n        lazyLoad: true,\r\n        autoplay: true,\r\n        speed: 300,\r\n        slidesToShow: innerWidth < 768 ? 1 : 3,\r\n        centerMode: true,\r\n        centerPadding: 0,\r\n        nextArrow: <NextArrowControl />,\r\n        prevArrow: <PrevArrowControl />,\r\n        beforeChange: (_, next) => setImageIndex(next),\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"css-generic\">\r\n                <Slider className=\"px-12\" {...sliderLandSettings}>\r\n                    {landImages.map(({ id, img }, idx) => (\r\n                        <div\r\n                            key={`land-${id}`}\r\n                            className={\r\n                                idx === imageIndex\r\n                                    ? 'landSlide activeSlide'\r\n                                    : 'landSlide'\r\n                            }\r\n                        >\r\n                            <img src={img} alt={img} />\r\n                        </div>\r\n                    ))}\r\n                </Slider>\r\n            </div>\r\n            <div className=\"css-generic items-center mt-5\">\r\n                <HeaderText\r\n                    className=\"leading-tight text-primary tracking-widest\"\r\n                    base=\"3xl\"\r\n                    lg=\"40px\"\r\n                >\r\n                    {landImages[imageIndex] && landImages[imageIndex]?.title}\r\n                </HeaderText>\r\n                <HeaderText\r\n                    className=\"leading-none text-info font-saira-condensed font-semibold\"\r\n                    base=\"xl\"\r\n                    lg=\"27px\"\r\n                >\r\n                    {landImages[imageIndex] && landImages[imageIndex]?.percent}\r\n                </HeaderText>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SliderLands\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TextSizes } from './../../constants/textConstants'\r\nimport { returnTextSizeByScreenWidth } from './../../services/stylesServices'\r\n\r\nconst Header = ({ children, style, className, ...restProps }) => {\r\n    const { base, sm, md, lg, xl, xxl } = returnTextSizeByScreenWidth({\r\n        ...restProps,\r\n    })\r\n    return (\r\n        <div\r\n            className={`font-russo-one  ${className} ${base} ${sm} ${md} ${lg} ${xl}  ${xxl}`}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n    className: PropTypes.string,\r\n    base: PropTypes.oneOf(TextSizes),\r\n    sm: PropTypes.oneOf(TextSizes),\r\n    md: PropTypes.oneOf(TextSizes),\r\n    lg: PropTypes.oneOf(TextSizes),\r\n    xl: PropTypes.oneOf(TextSizes),\r\n    xxl: PropTypes.oneOf(TextSizes),\r\n}\r\n\r\nHeader.defaultProps = {\r\n    className: '',\r\n    base: '4xl',\r\n}\r\n\r\nexport default Header\r\n","export const returnTextSizeByScreenWidth = ({ base, sm, md, lg, xl, xxl }) => {\r\n    const _base = base ? `text-${base}` : ''\r\n    const _sm = sm ? `sm:text-${sm}` : ''\r\n    const _md = md ? `md:text-${md}` : ''\r\n    const _lg = lg ? `lg:text-${lg}` : ''\r\n    const _xl = xl ? `xl:text-${xl}` : ''\r\n    const _xxl = xxl ? `2xl:text-${xxl}` : ''\r\n\r\n    return { base: _base, sm: _sm, md: _md, lg: _lg, xl: _xl, xxl: _xxl }\r\n}\r\n\r\nconst temp = (values) => {\r\n    for (let index = 0; index < values.length; index++) {\r\n        if (values[index]) {\r\n            return values[index]\r\n        }\r\n    }\r\n}\r\n\r\nexport const returnValueByScreenWidth = (\r\n    screenSizeWidth,\r\n    { base, sm, md, lg, xl, xxl }\r\n) => {\r\n    if (screenSizeWidth >= 1536) {\r\n        return temp([xxl, xl, lg, md, sm, base])\r\n    } else if (screenSizeWidth >= 1280) {\r\n        return temp([xl, lg, md, sm, base])\r\n    } else if (screenSizeWidth >= 1024) {\r\n        return temp([lg, md, sm, base])\r\n    } else if (screenSizeWidth >= 768) {\r\n        return temp([md, sm, base])\r\n    } else if (screenSizeWidth >= 640) {\r\n        return temp([sm, base])\r\n    } else {\r\n        return base\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { RightArrowSVG } from '../../assets/svg/icons'\r\n\r\nconst NextArrowControl = ({ onClick }) => {\r\n    return (\r\n        <div className=\"arrow next\" onClick={onClick}>\r\n            <div className=\"svg-container\">\r\n                <RightArrowSVG />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NextArrowControl\r\n","import React from 'react'\r\nimport { LeftArrowSVG } from '../../assets/svg/icons'\r\n\r\nconst PrevArrowControl = ({ onClick }) => {\r\n    return (\r\n        <div className=\"arrow prev\" onClick={onClick}>\r\n            <div className=\"svg-container\">\r\n                <LeftArrowSVG />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrevArrowControl\r\n"],"sourceRoot":""}