{"version":3,"sources":["constants/routerConstants.js","views lazy /^/.*$/ groupOptions: {} namespace object","Router/routes.js","Router/index.js","App.js","reportWebVitals.js","store/reducers/globalTypes.js","store/reducers/index.js","index.js","store/config/index.js"],"names":["HomePath","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","routes","name","path","paths","route","Route","componentProps","exact","history","createBrowserHistory","AppRouter","index","component","Component","loadable","connect","state","App","Fragment","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","globalTypes","LOG_OUT","persistConfig","key","storage","whitelist","appReducer","combineReducers","persistReducer","action","type","removeItem","undefined","store","middlewares","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducers","applyMiddleware","persistor","persistStore","configureStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"2GAAA,kCAAO,IAEMA,EAAQ,UAF2C,GAE3C,KACK,UAHsC,GAGtC,e,wCCH1B,IAAIC,EAAM,CACT,cAAe,CACd,GACA,GAED,iBAAkB,CACjB,GACA,GAED,gBAAiB,CAChB,GACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,GAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,EACA,EACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAON,QAAQQ,IAAIF,EAAIG,MAAM,GAAGd,IAAIG,EAAoBK,IAAID,MAAK,WAChE,OAAOJ,EAAoBS,MAG7BX,EAAoBc,KAAO,WAC1B,OAAOC,OAAOD,KAAKf,IAEpBC,EAAoBW,GAAK,GACzBK,EAAOC,QAAUjB,G,2KChDFkB,EAjBA,CACX,CACIC,KAAM,cACNC,K,MAAMC,EACNC,MAAOC,IACPC,eAAgB,CAAEN,OAAQ,IAC1BO,OAAO,I,OCJTC,EAAUC,cAEVC,E,4JACF,WACI,OACI,cAAC,IAAD,CAAQF,QAASA,EAAjB,SACI,cAAC,IAAD,UACKR,EAAOnB,KAAI,SAACuB,EAAOO,GAChB,OACI,cAACP,EAAMA,MAAP,CAEIF,KAAME,EAAMF,KACZK,MAAOH,EAAMG,MACbK,UAAW,WACP,IAAMC,EAAYC,aAAS,kBACvB,MAAO,YAAYV,EAAMH,UAE7B,OACI,cAACY,EAAD,sBAAeT,QAAf,IAAeA,OAAf,EAAeA,EAAOE,mBATlC,gBACkBF,EAAMH,kB,GAR5BY,aA8BTE,eAAQ,SAACC,GAAD,MAAY,KAAK,KAAzBD,CAA+BL,GCI/BO,EA/BH,WAYR,OACI,cAAC,IAAMC,SAAP,UACI,cAACC,EAAD,OCZGC,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,+BAAqBlC,MACjB,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wCCJTO,EAJK,CAChBC,QAAS,WCKPC,EAAgB,CAClBC,IAAK,OACLC,YACAC,UAAW,IAGTC,EAAaC,YAAgB,IAWpBC,cAAeN,GATV,SAACd,EAAOqB,GACxB,OAAIA,EAAOC,OAASV,EAAYC,SAC5BG,IAAQO,WAAW,gBACZL,OAAWM,EAAWH,IAG1BH,EAAWlB,EAAOqB,MCXvBI,ECHiB,WACnB,IAAMC,EAAc,CAACC,KAEfC,EACiB,qBAAXC,QACJA,OAAOC,sCACXC,IAGEN,EAAQO,YACVC,EACAL,EAAiBM,IAAe,WAAf,EAAmBR,KAKxC,MAAO,CAAED,QAAOU,UAFEC,YAAaX,IDXrBY,GAOdC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUf,MAAOA,EAAMA,MAAvB,SACI,cAAC,IAAD,CAAagB,QAAS,KAAMN,UAAWV,EAAMU,UAA7C,SAEI,cAAC,EAAD,UAKZO,SAASC,eAAe,SAM5BvC,M","file":"static/js/main.f8695fec.chunk.js","sourcesContent":["export const RootPath = process.env.NODE_ENV === 'production' ? '' : ''\r\n\r\nexport const HomePath = `${RootPath}/`\r\nexport const WhitelistPath = `${RootPath}/whitelist`\r\n","var map = {\n\t\"./Dashboard\": [\n\t\t41,\n\t\t5\n\t],\n\t\"./Dashboard.js\": [\n\t\t41,\n\t\t5\n\t],\n\t\"./LandingPage\": [\n\t\t21,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t3\n\t],\n\t\"./LandingPage/\": [\n\t\t21,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t3\n\t],\n\t\"./LandingPage/index\": [\n\t\t21,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t3\n\t],\n\t\"./LandingPage/index.js\": [\n\t\t21,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t3\n\t],\n\t\"./Whitelist\": [\n\t\t42,\n\t\t0,\n\t\t4,\n\t\t1,\n\t\t6\n\t],\n\t\"./Whitelist.js\": [\n\t\t42,\n\t\t0,\n\t\t4,\n\t\t1,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 54;\nmodule.exports = webpackAsyncContext;","import { Route } from 'react-router-dom'\n// import PrivateRoute from \"./CustomRoutes/PrivateRoute\"\n// import PublicRoute from './CustomRoutes/PublicRoute'\nimport * as paths from '../constants/routerConstants'\n\nconst routes = [\n    {\n        name: 'LandingPage',\n        path: paths.HomePath,\n        route: Route,\n        componentProps: { routes: [] },\n        exact: true,\n    },\n    // {\n    //     name: 'Whitelist',\n    //     path: paths.WhitelistPath,\n    //     route: Route,\n    //     componentProps: { routes: [] },\n    //     exact: true,\n    // },\n]\n\nexport default routes\n","import React, { Component } from 'react'\r\nimport { Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport loadable from '@loadable/component'\r\nimport { createBrowserHistory } from 'history'\r\nimport routes from './routes'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nclass AppRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    {routes.map((route, index) => {\r\n                        return (\r\n                            <route.route\r\n                                key={`route-${route.name}`}\r\n                                path={route.path}\r\n                                exact={route.exact}\r\n                                component={() => {\r\n                                    const Component = loadable(() =>\r\n                                        import(`../views/${route.name}`)\r\n                                    )\r\n                                    return (\r\n                                        <Component {...route?.componentProps} />\r\n                                    )\r\n                                }}\r\n                                // component={() => import(`../${route.name}`)}\r\n                            />\r\n                        )\r\n                    })}\r\n                </Switch>\r\n                {/* <Switch>{routes.map((route, index) => <Route path render{route.component})}</Switch> */}\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({}), null)(AppRouter)\r\n","import React from 'react'\r\n// import NoAuthLayout from './components/Layouts/NoAuthLayout'\r\n// import 'antd/dist'\r\nimport './styles/App.less'\r\n\r\n// import { useThemeSwitcher } from 'react-css-theme-switcher'\r\n// import { Button } from 'antd'\r\n// import { UseEffectHook } from './hooks/UseEffectHook'\r\nimport Router from './Router'\r\n// import AuthLayout from './components/Layouts/AuthLayout'\r\n// import LandingPage from './views/LandingPage'\r\n\r\nconst App = () => {\r\n    // const [isDarkMode, setIsDarkMode] = React.useState()\r\n    // const { switcher, currentTheme, status, themes } = useThemeSwitcher()\r\n\r\n    // const toggleTheme = (isChecked) => {\r\n    //     setIsDarkMode(isChecked)\r\n    //     switcher({ theme: isChecked ? themes.dark : themes.light })\r\n    // }\r\n\r\n    // Avoid theme change flicker\r\n    // const handleClick = () => {}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Router />\r\n        </React.Fragment>\r\n        // <LandingPage />\r\n        // {/* <NoAuthLayout>\r\n        //     <Button>Test</Button>\r\n        //     <h1>The current theme is: {currentTheme}</h1>\r\n        //     <Switch checked={isDarkMode} onChange={toggleTheme} />\r\n        //     <Input\r\n        //         style={{ width: 300, marginTop: 30 }}\r\n        //         placeholder=\"I will change with the theme!\"\r\n        //     />\r\n        //     <UseEffectHook />\r\n        //     <Router />\r\n        // </NoAuthLayout> */}\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry)\r\n                getFID(onPerfEntry)\r\n                getFCP(onPerfEntry)\r\n                getLCP(onPerfEntry)\r\n                getTTFB(onPerfEntry)\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default reportWebVitals\r\n","const globalTypes = {\r\n    LOG_OUT: 'log/out',\r\n}\r\n\r\nexport default globalTypes\r\n","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport globalTypes from './globalTypes'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [],\r\n}\r\n\r\nconst appReducer = combineReducers({})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === globalTypes.LOG_OUT) {\r\n        storage.removeItem('persist:root')\r\n        return appReducer(undefined, action)\r\n    }\r\n\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport App from './App'\r\n// import { ThemeSwitcherProvider } from 'react-css-theme-switcher'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport configureStore from './store/config/index'\r\n\r\nconst store = configureStore()\r\n\r\n// const themes = {\r\n//     dark: `${process.env.PUBLIC_URL}/themes/dark-theme.css`,\r\n//     light: `${process.env.PUBLIC_URL}/themes/light-theme.css`,\r\n// }\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store.store}>\r\n            <PersistGate loading={null} persistor={store.persistor}>\r\n                {/* <ThemeSwitcherProvider themeMap={themes} defaultTheme=\"light\"> */}\r\n                <App />\r\n                {/* </ThemeSwitcherProvider> */}\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","import { applyMiddleware, createStore, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { persistStore } from 'redux-persist'\r\n\r\nimport rootReducers from '../reducers'\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [thunkMiddleware]\r\n\r\n    const composeEnhancers =\r\n        (typeof window !== 'undefined' &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n        compose\r\n    // const persistedState\r\n\r\n    const store = createStore(\r\n        rootReducers,\r\n        composeEnhancers(applyMiddleware(...middlewares))\r\n    )\r\n\r\n    const persistor = persistStore(store)\r\n\r\n    return { store, persistor }\r\n}\r\n\r\nexport default configureStore\r\n"],"sourceRoot":""}