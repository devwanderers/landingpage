{"version":3,"sources":["components/Sections/StepTitle.js","components/Buttons/ButtonSpin.js","components/CreateAntField/index.js","store/services/axiosConfig.js","hooks/whiteListApi.js","services/yupValidations.js","views/Whitelist.js"],"names":["StepTitle","children","className","direction","Header","lg","style","textOrientation","writingMode","antIcon","LoadingOutlined","fontSize","spin","ButtonSpin","loading","textLoading","restProps","indicator","Fragment","FormItem","Form","Item","Option","Select","CreateAntField","AntComponent","field","form","hasFeedback","label","selectOptions","submitCount","type","props","change","onChange","touched","name","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","value","target","setFieldValue","map","AntSelect","AntInput","DatePicker","Input","Password","TimePicker","axiosInstance","axios","create","baseURL","interceptors","response","use","Promise","resolve","reject","error","status","data","whiteListApi","useState","fetching","setFetching","verified","setIdVerified","verifySponsorId","id","a","console","log","get","then","res","verify","addUser","byId","wallet","walletById","user","sponsorId","network","referralId","discordId","email","post","created","SUPPORTED_FORMATS","regex","validations","refId","Yup","min","max","password","matches","required","passwordConfirmation","oneOf","userName","test","validator","isAlphanumeric","mail","lowercase","phone","isAlpha","replace","birthDate","country","state","city","line","postalCode","file","size","includes","min20Usd","_v","parseFloat","no0Usd","generic","boolean","onlyNumber","isColor","s","color","number","array","staking","totalTokens","validateIsNotCurrentUser","currentUser","currentMembers","userMail","valid","index","length","Content","Layout","initialValues","referrerOptions","Whitelist","referralOpt","setReferralOpt","setbyId","verifiedWallet","setVerifiedWallet","showMessage","setShowMessage","sended","sendEmail","createError","setCreateError","errorMessage","setErrorMessage","schema","checkSponsor","sponsor","verifySponsor","mensaje","setTimeout","handleWallet","e","count","nextStep","document","getElementById","scrollIntoView","behavior","formSubmit","values","resetForm","minWidth","DefaultNavbar","base","md","width","top","returnValueByScreenWidth","innerWidth","sm","xl","bottom","height","validationSchema","onSubmit","isSubmitting","Group","options","option","selectReferrerOpt","optionType","buttonStyle","component","placeholder","disabled","onClick","src","utilitiesImages","href"],"mappings":"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","file":"static/js/6.63c8189c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Header from '../DisplayText/Header'\r\n\r\nconst StepTitle = ({ children, className = '', direction }) => {\r\n    return direction === 'right' ? (\r\n        <div\r\n            className={`css-generic pb-5 lg:pb-10 items-end justify-end flex-grow relative ${className}`}\r\n        >\r\n            <div className=\"css-generic w-100px \">\r\n                <div className=\"css-generic mr-8\">\r\n                    <Header\r\n                        lg=\"89px\"\r\n                        className=\"text-primary transform rotate-180 leading-tight tracking-widest\"\r\n                        style={{\r\n                            textOrientation: 'sideways-right',\r\n                            writingMode: 'vertical-rl',\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Header>\r\n                </div>\r\n            </div>\r\n            <div className=\"section-title-line border-blue-4 border-b border-r border-solid flex h-full\">\r\n                <div className=\"relative flex-grow\">\r\n                    <div className=\"absolute right-0 bottom-0 h-2/6 border-r-4 -mb-1px border-solid border-primary -mr-1\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div\r\n            className={`css-generic pb-5 lg:pb-10 items-start justify-end flex-grow relative ${className}`}\r\n        >\r\n            <div className=\"css-generic w-100px \">\r\n                <div className=\"css-generic mr-8\">\r\n                    <Header\r\n                        lg=\"89px\"\r\n                        className=\"text-primary transform rotate-180 leading-tight tracking-widest\"\r\n                        style={{\r\n                            textOrientation: 'sideways-right',\r\n                            writingMode: 'vertical-rl',\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Header>\r\n                </div>\r\n            </div>\r\n            <div className=\"section-title-line border-blue-4 border-t border-l border-solid flex h-full\">\r\n                <div className=\"relative flex-grow\">\r\n                    <div className=\"absolute left-0 bottom-0 h-2/6 border-l-4 -mb-1px border-solid border-primary -mr-1\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nStepTitle.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\n\r\nexport default StepTitle\r\n","import React from 'react'\r\nimport { Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst antIcon = (\r\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\r\n)\r\n\r\nconst ButtonSpin = ({ loading, textLoading, children, ...restProps }) => {\r\n    return (\r\n        <button\r\n            className=\" bg-primary text-lg px-12 py-2 rounded-md text-white disabled:opacity-50\"\r\n            // disabled={loading}\r\n            {...restProps}\r\n        >\r\n            {loading ? (\r\n                <span>\r\n                    <span className=\"pr-2\">\r\n                        <Spin indicator={antIcon} />\r\n                    </span>\r\n                    {textLoading}\r\n                </span>\r\n            ) : (\r\n                <React.Fragment> {children}</React.Fragment>\r\n            )}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonSpin\r\n","/* eslint-disable react/display-name */\r\nimport React from 'react'\r\nimport { DatePicker, Form, Input, TimePicker, Select } from 'antd'\r\n\r\nconst FormItem = Form.Item\r\nconst { Option } = Select\r\n\r\nconst CreateAntField = (AntComponent) => ({\r\n    field,\r\n    form,\r\n    hasFeedback,\r\n    label,\r\n    selectOptions,\r\n    submitCount,\r\n    type,\r\n    ...props\r\n}) => {\r\n    const change = props.onChange\r\n    const touched = form.touched[field.name]\r\n    const submitted = submitCount > 0\r\n    const hasError = form.errors[field.name]\r\n    const submittedError = hasError && submitted\r\n    const touchedError = hasError && touched\r\n    const onInputChange = ({ target: { value } }) =>\r\n        form.setFieldValue(field.name, value)\r\n    const onChange = (value) => form.setFieldValue(field.name, value)\r\n    const onBlur = () => form.setFieldTouched(field.name, true)\r\n    return (\r\n        <FormItem\r\n            label={label}\r\n            hasFeedback={(hasFeedback && submitted) || (hasFeedback && touched)}\r\n            help={submittedError || touchedError ? hasError : false}\r\n            validateStatus={\r\n                submittedError || touchedError ? 'error' : 'success'\r\n            }\r\n            onChange={change}\r\n        >\r\n            <AntComponent\r\n                {...field}\r\n                {...props}\r\n                onBlur={onBlur}\r\n                onChange={type ? onInputChange : onChange}\r\n            >\r\n                {selectOptions &&\r\n                    selectOptions.map((name) => (\r\n                        <Option key={name}>{name}</Option>\r\n                    ))}\r\n            </AntComponent>\r\n        </FormItem>\r\n    )\r\n}\r\n\r\nexport const AntSelect = CreateAntField(Select)\r\nexport const AntDatePicker = CreateAntField(DatePicker)\r\nexport const AntInput = CreateAntField(Input)\r\nexport const AntInputPassword = CreateAntField(Input.Password)\r\nexport const AntTimePicker = CreateAntField(TimePicker)\r\n","import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: '',\r\n})\r\naxiosInstance.interceptors.response.use(\r\n    (response) =>\r\n        new Promise((resolve, reject) => {\r\n            resolve(response)\r\n        }),\r\n    (error) => {\r\n        if (!error.response) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n        if (error.response.status === 403) {\r\n            // window.location = '/logout'\r\n        } else if (\r\n            error.response.status === 404 ||\r\n            error.response.status === 500\r\n        ) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error.response.data)\r\n            })\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n    }\r\n)\r\nexport default axiosInstance\r\n","/* eslint-disable no-unused-vars */\r\nimport { useState, useCallback } from 'react'\r\nimport axiosInstance from '../store/services/axiosConfig'\r\n\r\nconst whiteListApi = () => {\r\n    const [fetching, setFetching] = useState(false)\r\n    const [verified, setIdVerified] = useState(false)\r\n\r\n    const verifySponsorId = async (id) => {\r\n        console.log('verifyCode', id)\r\n        setFetching(true)\r\n        try {\r\n            const verify = await axiosInstance\r\n                .get(`http://localhost:9000/api/records/verify/${id}`)\r\n                .then((res) => res.data)\r\n            setFetching(false)\r\n            setIdVerified(true)\r\n            return verify\r\n        } catch (error) {\r\n            setFetching(false)\r\n            setIdVerified(false)\r\n            return error\r\n        }\r\n    }\r\n\r\n    const addUser = async (data, byId) => {\r\n        console.log(data)\r\n        setFetching(true)\r\n        const wallet = byId ? data.walletById : data.wallet\r\n        const user = {\r\n            byId: byId,\r\n            sponsorId: data.sponsorId,\r\n            wallet: wallet,\r\n            network: data.network,\r\n            referralId: data.referralId,\r\n            discordId: data.discordId,\r\n            email: data.email,\r\n        }\r\n        console.log(user)\r\n        try {\r\n            const created = await axiosInstance\r\n                .post(`http://localhost:9000/api/records/add`, user)\r\n                .then((res) => res.data)\r\n            setFetching(false)\r\n            setIdVerified(true)\r\n            console.log({ created })\r\n            return created\r\n        } catch (error) {\r\n            setFetching(false)\r\n            setIdVerified(false)\r\n            return error\r\n        }\r\n    }\r\n\r\n    return {\r\n        verifySponsorId,\r\n        addUser,\r\n        fetching,\r\n        verified,\r\n        setIdVerified,\r\n    }\r\n}\r\n\r\nexport default whiteListApi\r\n","import * as Yup from 'yup'\r\nimport validator from 'validator'\r\n\r\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\r\n\r\nconst FILE_SIZE = 100 * 1024\r\n\r\nexport const regex = {\r\n    alpha: /^[A-Za-z]+$/,\r\n    alphaNumeric: /[a-zA-Z0-9]/,\r\n    atLeastOneUpperCase: /[A-Z]/,\r\n    phoneNumber: /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\r\n    exact5: /^[0-9]{5}$/,\r\n}\r\n\r\nexport const validations = {\r\n    refId: Yup.string()\r\n        .min(4, 'Must be contain 4 digits min')\r\n        .max(12, 'Must be contain 12 digits min'),\r\n    wallet: Yup.string()\r\n        .min(10, 'Must be contain 10 digits min')\r\n        .max(64, 'Must be contain 64 digits min'),\r\n    password: Yup.string()\r\n        .min(8, 'Too Short!')\r\n        .max(64, 'Too Long!')\r\n        .matches(\r\n            regex.atLeastOneUpperCase,\r\n            'Must contain al least one uppercase letter.'\r\n        )\r\n        .required('Required'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .required('Required'),\r\n    userName: Yup.string()\r\n        .min(3, 'Too Short!')\r\n        .max(64, 'Too Long!')\r\n        .test(\r\n            'alphaNumeric',\r\n            'Must contain only letters and numbers.',\r\n            (value) => value && validator.isAlphanumeric(value)\r\n        )\r\n        .required('Required'),\r\n    mail: Yup.string()\r\n        .max(64, 'Too Long!')\r\n        .email('Must be a valid email format. example@email.com')\r\n        .lowercase('Must contain only lower case')\r\n        .required('Required'),\r\n    phone: Yup.string()\r\n        .matches(regex.phoneNumber, 'Must be a valid phone number.')\r\n        .required('Required'),\r\n    name: Yup.string()\r\n        .min(3, 'Too Short!')\r\n        .max(30, 'Too Long!')\r\n        .test(\r\n            'alpha',\r\n            'Must contain only letters.',\r\n            (value) =>\r\n                !value || (value && validator.isAlpha(value.replace(' ', '')))\r\n        ),\r\n    // .required('Required'),\r\n    birthDate: Yup.date().required('Required'),\r\n    country: Yup.string().required('Required'),\r\n    state: Yup.string().required('Required'),\r\n    city: Yup.string().required('Required'),\r\n    line: Yup.string().required('Required'),\r\n    postalCode: Yup.string()\r\n        .matches(regex.exact5, 'Must be exactly 5 digits')\r\n        .required('Required'),\r\n    file: Yup.mixed()\r\n        .required('A file is required')\r\n        .test(\r\n            'fileSize',\r\n            'File too large',\r\n            (value) => value && value[0].size <= FILE_SIZE\r\n        )\r\n        .test(\r\n            'fileFormat',\r\n            'Unsupported Format',\r\n            (value) => value && SUPPORTED_FORMATS.includes(value[0].type)\r\n        )\r\n        .required('Required'),\r\n    min20Usd: Yup.mixed()\r\n        .required('Required')\r\n        .test('usdAmount', 'Minimum to invest is 20 USD', (value) => {\r\n            if (value) {\r\n                let _v = value\r\n                _v = _v.replace(/\\D/g, '')\r\n                _v = parseFloat(_v)\r\n                return _v >= 20.0\r\n            }\r\n            return false\r\n        }),\r\n    no0Usd: Yup.mixed()\r\n        .required('Required')\r\n        .test('usdAmount', 'Usd amount must be higher than 0', (value) => {\r\n            if (value) {\r\n                let _v = value\r\n                _v = parseFloat(_v)\r\n                return _v > 0.0\r\n            }\r\n            return false\r\n        }),\r\n    generic: Yup.string().max(64, 'Too Long!').required('Required'),\r\n    boolean: Yup.bool().oneOf([true], 'Field must be checked'),\r\n    onlyNumber: Yup.mixed()\r\n        .required('Required')\r\n        .test('onlyNumber', 'Field must be a number', (value) => {\r\n            if (value) {\r\n                const _v = value\r\n                const isnum = /^\\d+$/.test(_v)\r\n\r\n                return isnum\r\n            }\r\n            return false\r\n        }),\r\n    isColor: Yup.mixed()\r\n        .required('Required')\r\n        .test(\r\n            'color',\r\n            'Field must be a valid color format. Examples. RGBA: rgba(0, 0, 0, 1), HEXA: #000000, RGB: rgb(0,0,0), Color: red',\r\n            (value) => {\r\n                if (value) {\r\n                    const s = new Option().style\r\n                    s.color = value\r\n                    return s.color !== ''\r\n                }\r\n                return false\r\n            }\r\n        ),\r\n    number: Yup.number().required('Required'),\r\n    array: Yup.array().required('Required'),\r\n    staking: (totalTokens) => {\r\n        return Yup.mixed()\r\n            .required('Required')\r\n            .test('onlyNumber', 'Field must be a number', (value) => {\r\n                if (value) {\r\n                    const _v = value\r\n                    const isnum = /^\\d+$/.test(_v)\r\n\r\n                    return isnum\r\n                }\r\n                return false\r\n            })\r\n            .test('minStake', 'Minimum to stake is 1', (value) => {\r\n                if (value) {\r\n                    let _v = value\r\n                    _v = _v.replace(/\\D/g, '')\r\n                    _v = parseFloat(_v)\r\n                    return _v >= 1.0\r\n                }\r\n                return false\r\n            })\r\n            .test('maxStake', 'Insufficient Balance', (value) => {\r\n                if (value) {\r\n                    let _v = value\r\n                    _v = _v.replace(/\\D/g, '')\r\n                    _v = parseFloat(_v)\r\n                    return _v <= parseFloat(totalTokens)\r\n                }\r\n                return false\r\n            })\r\n    },\r\n    validateIsNotCurrentUser: (currentUser, currentMembers) => {\r\n        return Yup.mixed()\r\n            .required('Required')\r\n            .test('validUserName', 'You can not add yourself', (value) => {\r\n                if (value) {\r\n                    if (\r\n                        value === currentUser.userName ||\r\n                        value === currentUser.userMail\r\n                    )\r\n                        return false\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n            .test(\r\n                'validateIsNotExistingMember',\r\n                'You can not add existing members',\r\n                (value) => {\r\n                    if (value) {\r\n                        let valid = true\r\n\r\n                        for (\r\n                            let index = 0;\r\n                            index < currentMembers.length;\r\n                            index++\r\n                        ) {\r\n                            const { userName, userMail } = currentMembers[index]\r\n                            if (value === userName || value === userMail) {\r\n                                valid = false\r\n                                break\r\n                            }\r\n                        }\r\n                        return valid\r\n                    }\r\n                    return false\r\n                }\r\n            )\r\n    },\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BackTop, Layout, Button, Radio } from 'antd'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { BiUpArrowAlt } from 'react-icons/bi'\r\n\r\nimport DefaultNavbar from '../components/Navbar/DefaultNavbar'\r\nimport HeaderText from '../components/DisplayText/Header'\r\nimport StepTitle from '../components/Sections/StepTitle'\r\nimport ButtonSpin from '../components/Buttons/ButtonSpin'\r\nimport { AntInput, AntSelect } from '../components/CreateAntField'\r\nimport whiteListApi from '../hooks/whiteListApi'\r\nimport {\r\n    DownArrowSVG,\r\n    OctagonTwitterSVG,\r\n    OctagonDiscordSVG,\r\n} from '../assets/svg/icons'\r\nimport {\r\n    FrameWhiteListTopSVG,\r\n    FrameWhiteListBottomSVG,\r\n} from '../assets/svg/frames'\r\nimport { Logo1SVG } from '../assets/svg/brand'\r\nimport utilitiesImages from '../assets/images/utilities'\r\nimport { returnValueByScreenWidth } from '../services/stylesServices'\r\nimport { validations } from '../services/yupValidations'\r\n\r\nconst { Content } = Layout\r\n\r\nconst initialValues = {\r\n    sponsorId: '',\r\n    wallet: '',\r\n    network: '',\r\n    referralId: '',\r\n    walletById: '',\r\n    discordId: '',\r\n    email: '',\r\n}\r\n\r\nconst referrerOptions = [\r\n    { label: 'Verify by id', value: 'id' },\r\n    { label: 'Verify by wallet', value: 'wallet' },\r\n]\r\n\r\nconst Whitelist = () => {\r\n    const {\r\n        verifySponsorId,\r\n        addUser,\r\n        fetching,\r\n        verified,\r\n        setIdVerified,\r\n    } = whiteListApi()\r\n    const [referralOpt, setReferralOpt] = useState('id')\r\n    const [byId, setbyId] = useState(true)\r\n    const [verifiedWallet, setVerifiedWallet] = useState(false)\r\n    const [showMessage, setShowMessage] = useState(false)\r\n    const [sended, sendEmail] = useState(false)\r\n    const [createError, setCreateError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const schema = Yup.object({\r\n        sponsorId: validations.refId,\r\n        referralId: validations.refId,\r\n        wallet: validations.wallet,\r\n        walletById: validations.wallet,\r\n        email: validations.mail,\r\n    })\r\n\r\n    const selectReferrerOpt = (e, resetForm) => {\r\n        const option = e.target.value\r\n        setReferralOpt(option)\r\n        setbyId(!byId)\r\n        setShowMessage(false)\r\n        setIdVerified(false)\r\n        resetForm()\r\n    }\r\n\r\n    const checkSponsor = async (sponsor) => {\r\n        const verifySponsor = await verifySponsorId(sponsor)\r\n        console.log(verifySponsor)\r\n        setErrorMessage(verifySponsor.mensaje)\r\n        setShowMessage(true)\r\n        setTimeout(() => {\r\n            setErrorMessage('')\r\n            setShowMessage(false)\r\n        }, 4000)\r\n    }\r\n\r\n    const handleWallet = (e) => {\r\n        const count = e.target.value.length\r\n        count >= 10 ? setVerifiedWallet(true) : setVerifiedWallet(false)\r\n    }\r\n\r\n    const nextStep = () => {\r\n        const element = document.getElementById('step2')\r\n        element.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    const formSubmit = async (values, { resetForm }) => {\r\n        console.log('click on submit')\r\n        const created = await addUser(values, byId)\r\n        if (created.error) {\r\n            sendEmail(true)\r\n            setCreateError(true)\r\n            setErrorMessage(created.mensaje)\r\n            setTimeout(() => {\r\n                setCreateError(false)\r\n                setErrorMessage('')\r\n                sendEmail(false)\r\n            }, 4000)\r\n        } else {\r\n            sendEmail(true)\r\n            setbyId(true)\r\n            setIdVerified(false)\r\n            resetForm()\r\n            setTimeout(() => {\r\n                sendEmail(false)\r\n            }, 4000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            className=\"whitelist flex flex-col min-h-screen\"\r\n            style={{ minWidth: '425px' }}\r\n        >\r\n            <BackTop>\r\n                <div className=\"h-12 w-12 lg:h-16 lg:w-16 rounded-full flex justify-center items-center bg-primary text-white\">\r\n                    <BiUpArrowAlt className=\"text-2xl\" />\r\n                </div>\r\n            </BackTop>\r\n            <DefaultNavbar />\r\n            <Content className=\"bg-blue-5\">\r\n                <div className=\"bg-whitelistSlider bg-no-repeat bg-cover -mt-24 pb-1 xl:pb-32 lg:pb-40 relative\">\r\n                    <div className=\"section mx-auto h-screen\">\r\n                        <div className=\"css-generic h-full flex-col justify-center\">\r\n                            <div className=\"count-down bg-black-1 bg-opacity-50 py-8 relative\">\r\n                                <div className=\"text-white\">\r\n                                    <div>\r\n                                        <HeaderText\r\n                                            base=\"xl\"\r\n                                            md=\"3xl\"\r\n                                            lg=\"5xl\"\r\n                                            className=\"text-white lg:-mb-8\"\r\n                                        >\r\n                                            THE WANDERERS\r\n                                        </HeaderText>\r\n                                        <HeaderText\r\n                                            base=\"2xl\"\r\n                                            md=\"6xl\"\r\n                                            lg=\"8xl\"\r\n                                            className=\"text-white tracking-widest\"\r\n                                        >\r\n                                            WHITELIST\r\n                                        </HeaderText>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p className=\"font-saira-condensed text-7xl\">\r\n                                            <span className=\"font-russo-one text-9xl text-primary\">\r\n                                                250\r\n                                            </span>{' '}\r\n                                            PLACES\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"text-center mb-5\">\r\n                                        <span className=\"text-2rem font-semibold\">\r\n                                            FOLLOW THE SIMPLE STEPS AND\r\n                                            <br />\r\n                                            BECOME PART TO THE EXCLUSIVE\r\n                                            WHITELIST\r\n                                        </span>\r\n                                    </div>\r\n                                    <DownArrowSVG\r\n                                        width=\"60px\"\r\n                                        className=\"m-auto\"\r\n                                    />\r\n                                    <div\r\n                                        className=\"absolute right-0 left-0 -mx-3\"\r\n                                        style={{\r\n                                            top: returnValueByScreenWidth(\r\n                                                innerWidth,\r\n                                                {\r\n                                                    base: '-10px',\r\n                                                    sm: '-16px',\r\n                                                    md: '-18px',\r\n                                                    xl: '-18px',\r\n                                                }\r\n                                            ),\r\n                                        }}\r\n                                    >\r\n                                        <FrameWhiteListTopSVG width=\"100%\" />\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"absolute right-0 left-0 -mx-3\"\r\n                                        style={{\r\n                                            bottom: returnValueByScreenWidth(\r\n                                                innerWidth,\r\n                                                {\r\n                                                    base: '-10px',\r\n                                                    sm: '-16px',\r\n                                                    md: '-18px',\r\n                                                    xl: '-18px',\r\n                                                }\r\n                                            ),\r\n                                        }}\r\n                                    >\r\n                                        <FrameWhiteListBottomSVG\r\n                                            width=\"100%\"\r\n                                            height=\"100%\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bg-whiteListBottom bg-bottom bg-no-repeat bg-contain bg-opacity-10\">\r\n                    <Formik\r\n                        validationSchema={schema}\r\n                        initialValues={initialValues}\r\n                        onSubmit={formSubmit}\r\n                    >\r\n                        {({ isSubmitting, resetForm, values }) => (\r\n                            <Form>\r\n                                <div className=\"step-1 css-generic lg:flex-row py-20 pb-32 px-10px xl:px-0\">\r\n                                    <HeaderText\r\n                                        base=\"4xl\"\r\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\r\n                                    >\r\n                                        STEP 1\r\n                                    </HeaderText>\r\n                                    <StepTitle\r\n                                        direction=\"right\"\r\n                                        className=\"hidden lg:flex w-1/5\"\r\n                                    >\r\n                                        STEP 1\r\n                                    </StepTitle>\r\n                                    <div className=\"info text-center lg:text-left px-7 w-full lg:w-3/5\">\r\n                                        <div className=\"text-center mb-5\">\r\n                                            <Radio.Group\r\n                                                options={referrerOptions}\r\n                                                onChange={(e) => {\r\n                                                    selectReferrerOpt(\r\n                                                        e,\r\n                                                        resetForm\r\n                                                    )\r\n                                                }}\r\n                                                value={referralOpt}\r\n                                                optionType=\"button\"\r\n                                                buttonStyle=\"solid\"\r\n                                            />\r\n                                        </div>\r\n                                        {byId ? (\r\n                                            <>\r\n                                                <p className=\"text-info text-5xl font-bold\">\r\n                                                    VERIFY YOUR REFERRER CALL\r\n                                                    SIGN ID\r\n                                                </p>\r\n                                                <p className=\"text-blue-8 text-4xl\">\r\n                                                    Enter the Referral Call Sign\r\n                                                    ID of the Wanderers that\r\n                                                    referred you.\r\n                                                </p>\r\n                                                <div className=\"my-5\">\r\n                                                    <span className=\"text-primary text-4xl\">\r\n                                                        Enter The Referrer ID\r\n                                                    </span>\r\n                                                    <Field\r\n                                                        component={AntInput}\r\n                                                        name=\"sponsorId\"\r\n                                                        type=\"string\"\r\n                                                        placeholder=\"Enter The Referrer ID\"\r\n                                                        className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10 py-3\"\r\n                                                    />\r\n                                                </div>\r\n                                                <p className=\"text-blue-8 text-3xl\">\r\n                                                    Their ID is needed for you\r\n                                                    to access this exclusive\r\n                                                    whitelist.\r\n                                                </p>\r\n                                                <div className=\"text-center lg:text-right mt-10\">\r\n                                                    <ButtonSpin\r\n                                                        className=\"btn-whitelist bg-transparent h-full px-20 border-4\tborder-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\r\n                                                        disabled={\r\n                                                            values.sponsorId\r\n                                                                .length < 4\r\n                                                        }\r\n                                                        onClick={async () => {\r\n                                                            if (verified) {\r\n                                                                nextStep()\r\n                                                            } else {\r\n                                                                checkSponsor(\r\n                                                                    values.sponsorId\r\n                                                                )\r\n                                                            }\r\n                                                        }}\r\n                                                        loading={fetching}\r\n                                                    >\r\n                                                        {verified ? (\r\n                                                            <span className=\"text-3xl text-primary font-medium\">\r\n                                                                NEXT\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            <span className=\"text-3xl text-primary font-medium\">\r\n                                                                VERIFY\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </ButtonSpin>\r\n                                                    {showMessage && (\r\n                                                        <div className=\"text-white text-2xl mt-4\">\r\n                                                            {verified ? (\r\n                                                                <div>\r\n                                                                    <span>\r\n                                                                        Successfully\r\n                                                                        verified\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                <div>\r\n                                                                    <span>\r\n                                                                        {\r\n                                                                            errorMessage\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <div className=\"w-full flex flex-col lg:flex-row items-center justify-center lg:justify-between\">\r\n                                                <div className=\"info w-full px-10 lg:px-0 text-center lg:text-left mb-20 lg:mb-0\">\r\n                                                    <p className=\"text-info text-5xl font-bold\">\r\n                                                        CONNECT YOUR WALLET\r\n                                                    </p>\r\n                                                    <div className=\"my-5\">\r\n                                                        <span className=\"text-primary text-4xl\">\r\n                                                            Enter your wallet\r\n                                                            address\r\n                                                        </span>\r\n                                                        <Field\r\n                                                            component={AntInput}\r\n                                                            name=\"wallet\"\r\n                                                            type=\"string\"\r\n                                                            placeholder=\"Wallet address\"\r\n                                                            className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10 py-3\"\r\n                                                            onChange={\r\n                                                                handleWallet\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"my-5\">\r\n                                                        <p className=\"text-primary text-4xl\">\r\n                                                            Select your network\r\n                                                        </p>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                AntSelect\r\n                                                            }\r\n                                                            name=\"network\"\r\n                                                            className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10\"\r\n                                                            selectOptions={[\r\n                                                                'Ethereum',\r\n                                                                'Solana',\r\n                                                                'Polygon',\r\n                                                            ]}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"mt-10\">\r\n                                                        <Button\r\n                                                            className=\"bg-transparent h-full px-20 border-4\tborder-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\r\n                                                            onClick={() =>\r\n                                                                nextStep()\r\n                                                            }\r\n                                                            disabled={\r\n                                                                !verifiedWallet ||\r\n                                                                values.network\r\n                                                                    .length <= 0\r\n                                                            }\r\n                                                        >\r\n                                                            <span className=\"text-3xl text-primary font-medium\">\r\n                                                                NEXT\r\n                                                            </span>\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <img\r\n                                                    src={utilitiesImages.wallet}\r\n                                                    width=\"50%\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"hidden lg:block w-1/5\"></div>\r\n                                </div>\r\n                                <div\r\n                                    id=\"step2\"\r\n                                    className=\"step-2 css-generic lg:flex-row pb-32 px-10px xl:px-0\"\r\n                                >\r\n                                    <HeaderText\r\n                                        base=\"4xl\"\r\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\r\n                                    >\r\n                                        STEP 2\r\n                                    </HeaderText>\r\n                                    <div className=\"hidden lg:block w-1/5\"></div>\r\n                                    <div className=\"info text-center lg:text-right px-7 w-full lg:w-3/5\">\r\n                                        <p className=\"text-info text-5xl font-bold\">\r\n                                            CREATE YOUR REFERRAL ID VERIFICATION\r\n                                        </p>\r\n                                        <p className=\"text-blue-8 text-4xl\">\r\n                                            Create your Referral ID\r\n                                        </p>\r\n                                        <div className=\"my-5\">\r\n                                            <span className=\"text-primary text-4xl\">\r\n                                                Create Your Referral ID\r\n                                            </span>\r\n                                            <Field\r\n                                                component={AntInput}\r\n                                                name=\"referralId\"\r\n                                                type=\"string\"\r\n                                                placeholder=\"Ex: tom123\"\r\n                                                className=\"bg-blue-9 border-none text-left lg:text-right text-3xl text-gray-300 placeholder-blue-10 py-3\"\r\n                                                disabled={\r\n                                                    (byId && !verified) ||\r\n                                                    (!byId && !verifiedWallet)\r\n                                                }\r\n                                            />\r\n                                            <p className=\"text-blue-8 text-2xl\">\r\n                                                Minimum 4 Characters, Max 12\r\n                                                Characters, only letters and\r\n                                                numbers allowed for your ID.\r\n                                            </p>\r\n                                        </div>\r\n                                        {byId && (\r\n                                            <div className=\"my-5\">\r\n                                                <span className=\"text-primary text-4xl\">\r\n                                                    Enter your wallet address\r\n                                                </span>\r\n                                                <Field\r\n                                                    component={AntInput}\r\n                                                    name=\"walletById\"\r\n                                                    type=\"string\"\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    className=\"bg-blue-9 border-none text-left lg:text-right text-3xl text-gray-300 placeholder-blue-10 py-3\"\r\n                                                    disabled={\r\n                                                        (byId && !verified) ||\r\n                                                        (!byId &&\r\n                                                            !verifiedWallet)\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <StepTitle\r\n                                        direction=\"left\"\r\n                                        className=\"hidden lg:flex w-1/5\"\r\n                                    >\r\n                                        STEP 2\r\n                                    </StepTitle>\r\n                                </div>\r\n                                <div className=\"step-3 css-generic lg:flex-row pb-32 px-10px xl:px-0\">\r\n                                    <HeaderText\r\n                                        base=\"4xl\"\r\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\r\n                                    >\r\n                                        STEP 3\r\n                                    </HeaderText>\r\n                                    <StepTitle\r\n                                        direction=\"right\"\r\n                                        className=\"hidden lg:flex w-1/5\"\r\n                                    >\r\n                                        STEP 3\r\n                                    </StepTitle>\r\n                                    <div className=\"info px-7 w-full lg:w-3/5 text-center lg:text-left\">\r\n                                        <p className=\"text-info text-5xl font-bold\">\r\n                                            TWITTER AND DISCORD VERIFICATION.\r\n                                        </p>\r\n                                        <div className=\"flex flex-row justify-around my-10\">\r\n                                            <div className=\"text-center\">\r\n                                                <OctagonTwitterSVG\r\n                                                    className=\"mx-auto mb-5\"\r\n                                                    width=\"50%\"\r\n                                                />\r\n                                                <span className=\"text-primary text-4xl\">\r\n                                                    Follow our twitter\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"text-center\">\r\n                                                <OctagonDiscordSVG\r\n                                                    className=\"mx-auto mb-5\"\r\n                                                    width=\"50%\"\r\n                                                />\r\n                                                <span className=\"text-primary text-4xl\">\r\n                                                    Join our discord\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-center lg:text-justify\">\r\n                                            <p className=\"text-blue-8 text-4xl\">\r\n                                                Find your Discord ID through\r\n                                                account options (on PC) or use\r\n                                                the profile button (on mobile).\r\n                                                Your ID must include the # and\r\n                                                numbers included.\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"my-5\">\r\n                                            <span className=\"text-primary text-4xl\">\r\n                                                Your Discord ID\r\n                                            </span>\r\n                                            <Field\r\n                                                component={AntInput}\r\n                                                name=\"discordId\"\r\n                                                type=\"string\"\r\n                                                placeholder=\"Ex: Tom#5019\"\r\n                                                className=\"bg-blue-9 border-none text-3xl text-gray-300 placeholder-blue-10 py-3\"\r\n                                                disabled={\r\n                                                    (byId && !verified) ||\r\n                                                    (!byId && !verifiedWallet)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"hidden lg:block w-1/5\"></div>\r\n                                </div>\r\n                                <div className=\"step-4 css-generic lg:flex-row pb-32 px-10px xl:px-0\">\r\n                                    <HeaderText\r\n                                        base=\"4xl\"\r\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\r\n                                    >\r\n                                        STEP 4\r\n                                    </HeaderText>\r\n                                    <div className=\"hidden lg:block w-1/5\"></div>\r\n                                    <div className=\"info text-center lg:text-right px-7 w-full lg:w-3/5\">\r\n                                        <p className=\"text-info text-5xl font-bold\">\r\n                                            EMAIL ADDRESS\r\n                                        </p>\r\n                                        {/* <p className=\"text-blue-8 text-4xl\">\r\n                                            *optional: for notifications or\r\n                                            newsletters, etc.\r\n                                        </p> */}\r\n                                        <div className=\"my-5\">\r\n                                            <span className=\"text-primary text-4xl\">\r\n                                                Your email\r\n                                            </span>\r\n                                            <Field\r\n                                                component={AntInput}\r\n                                                name=\"email\"\r\n                                                type=\"string\"\r\n                                                placeholder=\"Ex: tom@example.com\"\r\n                                                className=\"bg-blue-9 border-none text-left lg:text-right text-3xl text-gray-300 placeholder-blue-10 py-3\"\r\n                                                disabled={\r\n                                                    (byId && !verified) ||\r\n                                                    (!byId && !verifiedWallet)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <StepTitle className=\"hidden lg:flex w-1/5\">\r\n                                        STEP 4\r\n                                    </StepTitle>\r\n                                </div>\r\n                                <div className=\"step-5 css-generic lg:flex-row pb-32 px-10px xl:px-0\">\r\n                                    <HeaderText\r\n                                        base=\"4xl\"\r\n                                        className=\"block lg:hidden text-primary mb-5 md:mb-10 leading-tight tracking-widest mx-auto\"\r\n                                    >\r\n                                        STEP 5\r\n                                    </HeaderText>\r\n                                    <StepTitle\r\n                                        direction=\"right\"\r\n                                        className=\"hidden lg:flex w-1/5\"\r\n                                    >\r\n                                        STEP 5\r\n                                    </StepTitle>\r\n                                    <div className=\"info text-center lg:px-7 w-full lg:w-3/5\">\r\n                                        <p className=\"text-info text-5xl font-bold\">\r\n                                            GOOGLE RECAPTCHA VERIFICATION\r\n                                        </p>\r\n                                        <div className=\"mt-20\">\r\n                                            {byId ? (\r\n                                                <ButtonSpin\r\n                                                    type=\"submit\"\r\n                                                    className=\"btn-whitelist bg-transparent h-full w-4/5 lg:w-2/5 border-4 border-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\r\n                                                    disabled={\r\n                                                        values.sponsorId\r\n                                                            .length < 4 ||\r\n                                                        values.referralId\r\n                                                            .length < 4 ||\r\n                                                        values.walletById\r\n                                                            .length < 10 ||\r\n                                                        values.discordId\r\n                                                            .length === 0 ||\r\n                                                        values.email.length ===\r\n                                                            0\r\n                                                    }\r\n                                                    loading={fetching}\r\n                                                >\r\n                                                    <span className=\"text-4xl text-primary font-medium\">\r\n                                                        SIGN UP\r\n                                                    </span>\r\n                                                </ButtonSpin>\r\n                                            ) : (\r\n                                                <ButtonSpin\r\n                                                    type=\"submit\"\r\n                                                    className=\"btn-whitelist bg-transparent h-full w-4/5 lg:w-2/5 border-4 border-primary rounded-full hover:bg-transparent hover:border-primary focus:bg-transparent focus:border-primary\"\r\n                                                    disabled={\r\n                                                        values.wallet.length <\r\n                                                            10 ||\r\n                                                        values.network\r\n                                                            .length === 0 ||\r\n                                                        values.referralId\r\n                                                            .length < 4 ||\r\n                                                        values.discordId\r\n                                                            .length === 0 ||\r\n                                                        values.email.length ===\r\n                                                            0\r\n                                                    }\r\n                                                    loading={fetching}\r\n                                                >\r\n                                                    <span className=\"text-4xl text-primary font-medium\">\r\n                                                        SIGN UP\r\n                                                    </span>\r\n                                                </ButtonSpin>\r\n                                            )}\r\n                                        </div>\r\n                                        {sended && (\r\n                                            <>\r\n                                                {createError ? (\r\n                                                    <div className=\"mt-10 text-white\">\r\n                                                        <h4 className=\"text-3xl text-white\">\r\n                                                            WARNING:\r\n                                                        </h4>\r\n                                                        <span className=\"text-3xl\">\r\n                                                            {errorMessage}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <div className=\"mt-10 text-white\">\r\n                                                        <span className=\"text-3xl\">\r\n                                                            Thank you! we will\r\n                                                            review it and send\r\n                                                            you an email\r\n                                                        </span>\r\n                                                    </div>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"hidden lg:block w-1/5\"></div>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n                <footer className=\"bg-blue-5 py-12 hidden lg:block\">\r\n                    <div className=\"section\">\r\n                        <div className=\"css-generic flex-row justify-between\">\r\n                            <div className=\"css-generic flex-grow max-h-full w-6/12 \">\r\n                                <div className=\"css-generic items-center w-64\">\r\n                                    <div className=\"css-generic w-full mb-3 px-8\">\r\n                                        <Logo1SVG width=\"100%\" />\r\n                                    </div>\r\n                                    <HeaderText\r\n                                        base=\"2xl\"\r\n                                        className=\"text-blue-4 font-semibold font-saira-condensed\"\r\n                                    >\r\n                                        9,000 unique Wanderers\r\n                                    </HeaderText>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"css-generic flex-grow max-h-full w-6/12 items-center\">\r\n                                <div className=\"css-generic\">\r\n                                    <h5 className=\"text-capitalize text-xl text-blue-4 tracking-wide font-bold mb-2\">\r\n                                        Home\r\n                                    </h5>\r\n                                    <ul className=\"list-none font-saira-condensed font-semibold\">\r\n                                        <li className=\"mb-2\">\r\n                                            <a\r\n                                                className=\"text-blue-4 hover:text-gray-400\"\r\n                                                href=\"#\"\r\n                                            >\r\n                                                Terms of service\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\" mb-2\">\r\n                                            <a\r\n                                                className=\"text-blue-4 hover:text-gray-400\"\r\n                                                href=\"#\"\r\n                                            >\r\n                                                Smart Contract\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Whitelist\r\n"],"sourceRoot":""}